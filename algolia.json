[{"objectID":"e2471cbcc15d028d01a1eed1a70196b03bac130c","permalink":"/post/dev/trouble/wslg_cause_mstsc_steal_focus/","title":"WSLg调用Microsoft Remote Desktop导致抢夺窗口焦点","content":" 起因 装好新电脑之后，用了一阵子老是发现有东西在抢我的屏幕焦点，特别是在玩游戏的时候更容易发现，遂进行了一番捯饬\n搜素过程 首先使用一个窗口焦点监控程序，找一下到底是什么在抢我的鼠标\n我用的是monitorMouse，这玩意我没找到出处在哪，只看到各种下载站乱转，如果知道原作者的欢迎留言，我补一下\n或者你可以用focus.exe，来自下面我查资料查到的论坛人家推荐的\n或者再有技术力一点，直接拿Python写个脚本也不是不行不是吗？\n然后，使用这个找到了是mstsc.exe在抢夺焦点，查了一下是微软远程桌面。\n翻了一下Windows设置，确认没有打开远程桌面。然后查询找到了下面这个帖子\nRemote Desktop Client (mstsc.exe) causes loss of focus https://resource.dopus.com/t/remote-desktop-client-mstsc-exe-causes-loss-of-focus/43262/12 相关讨论：\nmstsc.exe steals focus - Reddit: Windows11\nDisabling WSLg (or using it together with X410 - x410.dev)\n来自Github Discuss的原因分析：\n具体来说就是微软在使用WSLg的时候会调用微软远程桌面，\n详情请见microsoft/wslg: /WSLGd/main.cpp，/mnt/c/Windows/System32/mstsc.exe 是通过 LaunchProcess 函数执行的\n解决方案 Opus论坛论坛中讨论的解决方法\n1 2 [wsl2] gui Applications=false X410给出的解决方案\n1 2 [wsl2] guiApplications=false 更简单的是使用WSL Setting，在可选功能中把启动GUI应用程序关掉就好了\n这样做和上面第二个方案对配置文件做的修改是一样的\n修改之后使用wsl --shutdown重启WSL就可以了\n至此，问题解决~\n","date":"2025-06-29 01:38:56","updated":"2025-06-29 09:54:05"},{"objectID":"e363ca65fc33ef051f5dacde6f992948719594dd","permalink":"/post/hugo/trouble/theme_gitsubmodule-disappear/","title":"Git子模块管理主题，Action构建报错找不到主题","content":"TL;DR 太长不看： 一键跳转到解决方案\n问题回顾 今天在从Hugo Module切换到Git子模块管理主题时，遇到了一个问题\n在GitHub Action中构建时，报错：\n1 2 3 4 Run hugo --minify Total in 2 ms Error: failed to load modules: module \u0026#34;reimu\u0026#34; not found in \u0026#34;/home/runner/work/Blog/Blog/themes/reimu\u0026#34;; either add it as a Hugo Module or store it in \u0026#34;/home/runner/work/Blog/Blog/themes\u0026#34;.: module does not exist Error: Process completed with exit code 1. 检查了构建action，确实存在拉取子模块的内容：\n1 2 3 4 5 - name: Checkout private repository uses: actions/checkout@v4 with: submodules: true # Fetch submodules fetch-depth: 0 # Fetch all history for .GitInfo and Lastmod 相关搜索 经过一番搜索，找到两个相关帖子：\nGit submodule failure when building pages with Hugo - 使用 Hugo 构建页面时 Git 子模块失败 Hugo submodule with PaperMod - error says to remove site from .gitmodules but it’s not there - 使用 Hugo 和 PaperMod 的子模块 - 错误提示从.gitmodules 中删除站点，但那里没有 两者都提到了关于清空git submodule，重新添加子模块的问题\n解决方案 首先检查工作流文件是否存在拉取子模块内容，排除工作流问题\n1 2 3 4 5 - name: Checkout repository uses: actions/checkout@v4 with: submodules: true # Fetch submodules fetch-depth: 0 # Fetch all history for .GitInfo and Lastmod 确认工作流没问题，就多半是子模块没添加成功\n删除子模块使用指令\n1 2 # reimu请替换成你的主题名称 git rm --cached themes/reimu 然后重新执行\n1 2 # 对应内容请修改为你用的主题 git submodule add https://github.com/D-Sketon/hugo-theme-reimu.git themes/reimu 这个时候注意！\n此时，你的Git提交区域会出现这样的暂存提交(忽略删除线，这是我又删掉模拟的)\n这个是子模块的git目录，一旦你从暂存里去掉这个提交，他就不太好再被提交上去了\n当你没有这个目录的时候，哪怕提交了.gitsubmodule，git也不会认为存在子模块\n至此，问题解决~\n","date":"2025-06-24 23:20:24","updated":"2025-06-24 23:20:24"},{"objectID":"1d809a5810fdb6fbce483da3027b5424e6c41d53","permalink":"/post/hugo/tutorial/part1/","title":"Hugo搭建系列教程 1.安装 Hugo","content":" 安装Hugo 我的部署基本参照官方文档\nHugo Quick Start https://gohugo.io/getting-started/quick-start/ 请尽量以英文文档为准，中文文档更新进度有些滞后，在现在都有浏览器翻译的情况下，还是建议看英文文档\n以下安装环境为：本地开发环境Windows，远程部署GitHub Pages，之后不再赘述\n1.安装 Hugo 之前 最好先安装一下这么几个东西：Git、Go、Dart Sass\nGit是很有必要的:\n可以提供类Linux终端，后续的相关命令都可以在Git Bash中执行 安装主题可以使用Git子模块 博客文章可以使用Git进行版本控制 Go主要用于Hugo Modules，如果你需要自改主题或者确认不用Hugo Modules的话可以不安装\nDart Sass是Hugo的Sass处理器，如果看上的主题要就装一下\nGit安装不多赘述，官方文档，看不懂就去CSDN或者知乎，这要也看不懂下面也不用看了 :)\nGo也很简单，官方文档，下载安装包，打开，改个路径，一路下一步就行了\nDart Sass相对麻烦一点，官方文档\n本地开发环境安装需要使用包管理器，Windows下主要使用这两个方法：\nChocolatey 安装：\n1 choco install dart-sass 或者Scoop 安装：\n1 scoop install dart-sass 包管理器安装使用请自行搜索，不再赘述\n2. 安装Hugo Extended Edition 详细内容请参考官方文档 Hugo 安装\n因为我没有直接部署需求，所以选择Hugo extended edition\n不同版本的Hugo区别在这里：\n功能 Extended Edition Extended/Deploy Edition 处理图像时编码为 WebP 格式。您可以使用任何版本解码 WebP 图像。 ✓ ✓ |使用嵌入的 LibSass 转换器将 Sass 转换为 CSS。您可以使用任何版本使用 Dart Sass 转换器。|✓|✓|\n|直接将您的网站部署到 Google Cloud Storage 存储桶、AWS S3 存储桶或 Azure 存储容器中。查看详情。|✗|✓|\n标准版不用考虑，而部署功能，如果你是像我一样用GitHub Pages的话，直接用GitHub Actions就可以了，所以也不需要Extended/Deploy Edition\n选定版本之后，到 Github Release 找对应的版本包，一般包名为 hugo_extended_x.xxx.x_windows-架构.zip\n如果安装Dart Sass的时候使用了Chocolatey或者Scoop，或者更习惯使用包管理器安装的，也可以使用以下命令安装：\nChocolatey:\n1 choco install hugo-extended Scoop:\n1 scoop install hugo-extended 或者更习惯使用Winget的也可以使用以下命令安装：\n1 winget install Hugo.Hugo.Extended 卸载：\n1 winget uninstall --name \u0026#34;Hugo (Extended)\u0026#34; 最后打开命令行，输入以下命令查看是否安装成功：\n1 hugo version 正确显示Hugo版本号就可以了\n至此Hugo安装就完成了，下一篇讲讲怎么搭建自己的博客\n","date":"2025-04-22 15:22:02","updated":"2025-06-23 23:45:00"},{"objectID":"ba95ebdbe5f624ca831bdae902b8f7eedbe8c5b4","permalink":"/post/hugo/tutorial/part0/","title":"Hugo搭建系列教程 0.前言","content":" 前言(碎碎念) TL;DR: 不想看碎碎念直接跳转正文部分\n为什么选择Hugo 在此之前，也看过很多博客网站的介绍，WordPress、Jekyll、Hexo、Halo等等\n我喜欢轻量化，所以WordPress就没有考虑\nJekyll的话，没有接触过Ruby，所以也没有考虑\nHexo，我有在一些地方看到对于文章较多的博客性能不太好，所以虽然主题多但也没选择\nHalo虽然很新，但是我主观不喜欢Java，所以也没选择\n最终选择了Hugo\n新框架但又不是特别新，有问题能找相似问题，主题也有一些 生成速度相对较快，各大免费云都能直接部署 虽然要本地部署推送，但是好像和平常写代码也差不多 下面就是完整的Hugo部署过程了\n正文 想写的东西比较多，就做了一下拆分，一部分一部分的写\n1. 安装Hugo Hugo搭建系列教程 1.安装 Hugo 安装Hugo 我的部署基本参照官方文档 Hugo Quick Start https://gohugo.io/getting-started/quick-start/ 请尽量以英文文档为准，中文文档更新进度有些滞后，在现在都有浏览器翻译的情况下，还是建议看英文文档 以下安装环境为：本地开发环境Windows，远程部署GitHub Pages，之后不再赘述 ","date":"2025-04-19 18:24:15","updated":"2025-06-23 23:45:00"}]